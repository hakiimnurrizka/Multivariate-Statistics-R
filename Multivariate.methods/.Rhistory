my_dummy$cluster = clusterCut
my_dummy %>% ggplot(aes(x,y), color = cluster) + geom_point(alpha = 0.4, size = 3.5 ,col = clusterCut) +
scale_color_manual(values = c('black', 'red', 'green')) + labs(x='X', y="Y")
my_dummy %>% ggplot(aes(x,y), color = cluster) + geom_point(alpha = 0.8, size = 3.5 ,col = clusterCut) +
scale_color_manual(values = c('black', 'red', 'green')) + labs(x='X', y="Y")
my_dummy %>% ggplot(aes(x,y), color = cluster) + geom_point(alpha = 1.8, size = 3.5 ,col = clusterCut) +
scale_color_manual(values = c('black', 'red', 'green')) + labs(x='X', y="Y")
my_dummy %>% ggplot(aes(x,y), color = cluster) + geom_point(alpha = 1.8, size = 3 ,col = clusterCut) +
scale_color_manual(values = c('black', 'red', 'green')) + labs(x='X', y="Y")
my_dummy %>% ggplot(aes(x,y), color = cluster) + geom_point(alpha = 1.8, size = 2.5 ,col = clusterCut) +
scale_color_manual(values = c('black', 'red', 'green')) + labs(x='X', y="Y")
View(client_train)
## K Means clustering
#Lets cluster the dummy into 4 clusters, and choose the initiation for the centers
cent = as.data.frame(cbind(c(0,8.75, 8.75, 0), c(0.1, 0.1, 0.5, 0.5)))
names(cent) = c("x", "y")
cent$cluster = c("1", "2", "3", "4")
cent %>% ggplot(aes(x,y), color = cluster) + geom_point(alpha = 1.8, size = 2.5) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
cent %>% ggplot(aes(x,y), color = cluster) + geom_point(alpha = 1.8, size = 2.5, color = cluster) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
cent$cluster = c(1, 2, 3, 4)
cent %>% ggplot(aes(x,y), color = cluster) + geom_point(alpha = 1.8, size = 2.5, color = cent$cluster) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
cent %>% ggplot(aes(x,y), color = cluster) +
geom_point(alpha = 1.8, size = 2.5, color = cent$cluster, shape = 2) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
cent %>% ggplot(aes(x,y), color = cluster) +
geom_point(alpha = 1.8, size = 2.5, fill = cent$cluster, shape = 2) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
cent %>% ggplot(aes(x,y), color = cluster) +
geom_point(alpha = 1.8, size = 2.5, color = cent$cluster, fill = cent$cluster, shape = 2) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
cent %>% ggplot(aes(x,y), color = cluster) +
geom_point(alpha = 1.8, size = 2.5, color = cent$cluster, fill = c('black', 'red', 'green', 'blue'), shape = 2) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
cent %>% ggplot(aes(x,y), color = cluster) +
geom_point(alpha = 1.8, size = 2.5, colour = cent$cluster, fill = c('black', 'red', 'green', 'blue'), shape = 2) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
cent %>% ggplot(aes(x,y), color = cluster) +
geom_point(alpha = 1.8, size = 2.5, colour = cent$cluster, shape = 3) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
cent %>% ggplot(aes(x,y), color = cluster) +
geom_point(alpha = 1.8, size = 2.5, colour = cent$cluster, shape = 4) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
n
cent %>% ggplot(aes(x,y), color = cluster) +
geom_point(alpha = 1.8, size = 2.5, colour = cent$cluster, shape = 21) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
cent %>% ggplot(aes(x,y), color = cluster) +
geom_point(alpha = 1.8, size = 2.5, colour = cent$cluster, shape = 7) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
cent %>% ggplot(aes(x,y), color = cluster) +
geom_point(alpha = 1.8, size = 2.5, colour = cent$cluster, shape = 7, stroke = 8) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
cent %>% ggplot(aes(x,y), color = cluster) +
geom_point(alpha = 1.8, size = 2.5, colour = cent$cluster, shape = 7, stroke = 4) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
cent %>% ggplot(aes(x,y), color = cluster) +
geom_point(alpha = 1.8, size = 2.5, colour = cent$cluster, shape = 7, stroke = 3) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
cent %>% ggplot(aes(x,y), color = cluster) +
geom_point(alpha = 1.8, size = 2, colour = cent$cluster, shape = 7, stroke = 3) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
cent %>% ggplot(aes(x,y), color = cluster) +
geom_point(alpha = 1, size = 2, colour = cent$cluster, shape = 7, stroke = 3) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
cent %>% ggplot(aes(x,y), color = cluster) +
geom_point(alpha = 1, size = 2, colour = cent$cluster, shape = 7, stroke = 2) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
cent %>% ggplot(aes(x,y), color = cluster) +
geom_point(alpha = 1, size = 2, colour = cent$cluster, shape = 2, stroke = 2) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
my_dummy = my_dummy[,1:2]
cent %>% ggplot(aes(x,y), color = cluster) +
geom_point(alpha = 1, size = 2, colour = cent$cluster, shape = 2, stroke = 2) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y") +
ggplot(aes(my_dummy$x,my_dummy$y)) + geom_point() + labs(x='X', y="Y")
my_dummy$cluster = c(1,1,1,1,1,1,1,1,1,1)
km_dummy = as.data.frame(rbind(cent, my_dummy))
cent %>% ggplot(aes(x,y)) +
geom_point(alpha = 1, size = 2, colour = cent$cluster, shape = 2, stroke = 2) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y") +
ggplot(aes(my_dummy$x,my_dummy$y)) + geom_point() + labs(x='X', y="Y")
cent %>% ggplot(aes(x,y)) +
geom_point(alpha = 1, size = 2, colour = cent$cluster, shape = 2, stroke = 2) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
View(km_dummy)
km_dummy %>% ggplot(aes(x,y), color = cluster) +
geom_point(alpha = 1, size = 2, colour = km_dummy$cluster, shape = c(2,2,2,2,1,1,1,1,1,1,1,1,1,1), stroke = 2) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
km_dummy %>% ggplot(aes(x,y), color = cluster) +
geom_point(alpha = 1, size = 2, colour = km_dummy$cluster, shape = c(2,2,2,2,1,1,1,1,1,1,1,1,1,1), stroke = c(2,2,2,2,1,1,1,1,1,1,1,1,1,1)) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
km_dummy %>% ggplot(aes(x,y), color = cluster) +
geom_point(alpha = 1, size = 2, colour = km_dummy$cluster, shape = c(2,2,2,2,1,1,1,1,1,1,1,1,1,1), fill = km_dummy$cluster, stroke = c(2,2,2,2,1,1,1,1,1,1,1,1,1,1)) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
km_dummy %>% ggplot(aes(x,y), color = cluster) +
geom_point(alpha = 1, size = 2, colour = km_dummy$cluster, shape = c(2,2,2,2,0,1,1,1,1,1,1,1,1,1), stroke = c(2,2,2,2,1,1,1,1,1,1,1,1,1,1)) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
km_dummy %>% ggplot(aes(x,y), color = cluster) +
geom_point(alpha = 1, size = 2, colour = km_dummy$cluster, shape = c(2,2,2,2,.,1,1,1,1,1,1,1,1,1), stroke = c(2,2,2,2,1,1,1,1,1,1,1,1,1,1)) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
km_dummy %>% ggplot(aes(x,y), color = cluster) +
geom_point(alpha = 1, size = 2, colour = km_dummy$cluster, shape = c(2,2,2,2,".",1,1,1,1,1,1,1,1,1), stroke = c(2,2,2,2,1,1,1,1,1,1,1,1,1,1)) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
km_dummy %>% ggplot(aes(x,y), color = cluster) +
geom_point(alpha = 1, size = 2, colour = km_dummy$cluster, shape = c(2,2,2,2,1,1,1,1,1,1,1,1,1,1), stroke = c(2,2,2,2,1,1,1,1,1,1,1,1,1,1)) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
km_dummy %>% ggplot(aes(x,y), color = cluster) +
geom_point(alpha = 1, size = 2, colour = km_dummy$cluster, shape = c(2,2,2,2,1,1,1,1,1,1,1,1,1,1),
fill = c(1,2,3,4,1,1,1,1,1,1,1,1,1,1), stroke = c(2,2,2,2,1,1,1,1,1,1,1,1,1,1)) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
km_dummy %>% ggplot(aes(x,y), color = cluster) +
geom_point(alpha = 1, size = 2, shape = c(2,2,2,2,1,1,1,1,1,1,1,1,1,1), colour = km_dummy$cluster,
fill = c(1,2,3,4,1,1,1,1,1,1,1,1,1,1), stroke = c(2,2,2,2,1,1,1,1,1,1,1,1,1,1)) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
km_dummy %>% ggplot(aes(x,y), color = cluster) +
geom_point(alpha = 1, size = 2, shape = c(2,2,2,2,1,1,1,1,1,1,1,1,1,1), colour = km_dummy$cluster,
fill = c("black",2,3,4,1,1,1,1,1,1,1,1,1,1), stroke = c(2,2,2,2,1,1,1,1,1,1,1,1,1,1)) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
#Lets see how each observation change the clusters
kmean_1st = kmeans(my_dummy, centers = cent, iter.max = 1)
## K Means clustering
#Lets cluster the dummy into 4 clusters, and choose the initiation for the centers
cent = as.data.frame(cbind(c(2.5,8.75, 7.5, 1.25), c(0.1, 0.1, 0.4, 0.5)))
cent$cluster = c(1, 2, 3, 4)
cent %>% ggplot(aes(x,y)) +
geom_point(alpha = 1, size = 2, colour = cent$cluster, shape = 2, stroke = 2) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
names(cent) = c("x", "y")
cent %>% ggplot(aes(x,y)) +
geom_point(alpha = 1, size = 2, colour = cent$cluster, shape = 2, stroke = 2) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
## K Means clustering
#Lets cluster the dummy into 4 clusters, and choose the initiation for the centers
cent = as.data.frame(cbind(c(2.5,8.75, 7.5, 1.25), c(0.1, 0.1, 0.4, 0.5)))
names(cent) = c("x", "y")
cent$cluster = c(1, 2, 3, 4)
cent %>% ggplot(aes(x,y)) +
geom_point(alpha = 1, size = 2, colour = cent$cluster, shape = 2, stroke = 2) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
#Plot the data (circles) and the initial centers (triangles)
my_dummy = my_dummy[,1:2]
my_dummy$cluster = c(1,1,1,1,1,1,1,1,1,1)
km_dummy = as.data.frame(rbind(cent, my_dummy))
km_dummy %>% ggplot(aes(x,y), color = cluster) +
geom_point(alpha = 1, size = 2, shape = c(2,2,2,2,1,1,1,1,1,1,1,1,1,1), colour = km_dummy$cluster, stroke = c(2,2,2,2,1,1,1,1,1,1,1,1,1,1)) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
## K Means clustering
#Lets cluster the dummy into 4 clusters, and choose the initiation for the centers
cent = as.data.frame(cbind(c(2.5,8.75, 7.5, 2.5), c(0.1, 0.1, 0.4, 0.45)))
names(cent) = c("x", "y")
cent$cluster = c(1, 2, 3, 4)
cent %>% ggplot(aes(x,y)) +
geom_point(alpha = 1, size = 2, colour = cent$cluster, shape = 2, stroke = 2) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
#Plot the data (circles) and the initial centers (triangles)
my_dummy = my_dummy[,1:2]
my_dummy$cluster = c(1,1,1,1,1,1,1,1,1,1)
km_dummy = as.data.frame(rbind(cent, my_dummy))
km_dummy %>% ggplot(aes(x,y), color = cluster) +
geom_point(alpha = 1, size = 2, shape = c(2,2,2,2,1,1,1,1,1,1,1,1,1,1), colour = km_dummy$cluster, stroke = c(2,2,2,2,1,1,1,1,1,1,1,1,1,1)) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
#Lets see how each observation change the clusters
kmean_1st = kmeans(my_dummy, centers = cent, iter.max = 1)
#Lets see how each observation change the clusters
kmean_1st = kmeans(my_dummy, centers = cent, iter.max = 2)
#Lets see how each observation change the clusters
kmean_1st = kmeans(my_dummy, centers = cent, iter.max = 10)
## K Means clustering
#Lets cluster the dummy into 4 clusters, and choose the initiation for the centers
cent = as.data.frame(cbind(c(2.5,8.75, 6.25, 2.5), c(0.1, 0.1, 0.35, 0.45)))
names(cent) = c("x", "y")
cent$cluster = c(1, 2, 3, 4)
cent %>% ggplot(aes(x,y)) +
geom_point(alpha = 1, size = 2, colour = cent$cluster, shape = 2, stroke = 2) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
#Plot the data (circles) and the initial centers (triangles)
my_dummy = my_dummy[,1:2]
my_dummy$cluster = c(1,1,1,1,1,1,1,1,1,1)
km_dummy = as.data.frame(rbind(cent, my_dummy))
km_dummy %>% ggplot(aes(x,y), color = cluster) +
geom_point(alpha = 1, size = 2, shape = c(2,2,2,2,1,1,1,1,1,1,1,1,1,1), colour = km_dummy$cluster, stroke = c(2,2,2,2,1,1,1,1,1,1,1,1,1,1)) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
#Lets see how each observation change the clusters
kmean_1st = kmeans(my_dummy, centers = cent, iter.max = 10)
#Lets see how each observation change the clusters
kmean_1st = kmeans(my_dummy, centers = cent, iter.max = 1)
#Lets see how each observation change the clusters
kmean_1st = kmeans(my_dummy, nstart = 4, iter.max = 1)
#Lets see how each observation change the clusters
kmean_1st = kmeans(my_dummy, nstart = 4, iter.max = 100)
#Lets see how each observation change the clusters
dist(km_dummy)
## K Means clustering
#Lets cluster the dummy into 4 clusters, and choose the initiation for the centers
cent = as.data.frame(cbind(c(2.5,8.75, 6.25, 1.25), c(0.1, 0.1, 0.35, 0.4)))
names(cent) = c("x", "y")
cent$cluster = c(1, 2, 3, 4)
cent %>% ggplot(aes(x,y)) +
geom_point(alpha = 1, size = 2, colour = cent$cluster, shape = 2, stroke = 2) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
#Plot the data (circles) and the initial centers (triangles)
my_dummy = my_dummy[,1:2]
my_dummy$cluster = c(1,1,1,1,1,1,1,1,1,1)
km_dummy = as.data.frame(rbind(cent, my_dummy))
km_dummy %>% ggplot(aes(x,y), color = cluster) +
geom_point(alpha = 1, size = 2, shape = c(2,2,2,2,1,1,1,1,1,1,1,1,1,1), colour = km_dummy$cluster, stroke = c(2,2,2,2,1,1,1,1,1,1,1,1,1,1)) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
## K Means clustering
#Lets cluster the dummy into 3 clusters, and choose the initiation for the centers
cent = as.data.frame(cbind(c(2.5,8.75, 3), c(0.1, 0.1, 0.4)))
names(cent) = c("x", "y")
cent$cluster = c(1, 2, 3)
cent %>% ggplot(aes(x,y)) +
geom_point(alpha = 1, size = 2, colour = cent$cluster, shape = 2, stroke = 2) +
scale_color_manual(values = c('red', 'green', 'blue')) + labs(x='X', y="Y")
cent %>% ggplot(aes(x,y)) +
geom_point(alpha = 1, size = 2, colour = cent$cluster, shape = 2, stroke = 2) +
scale_color_manual(values = c('red', 'green', 'blue')) + labs(x='X', y="Y")
cent %>% ggplot(aes(x,y)) +
geom_point(alpha = 1, size = 2, colour = c(2,3,4), shape = 2, stroke = 2) +
scale_color_manual(values = c('red', 'green', 'blue')) + labs(x='X', y="Y")
#Plot the data (circles) and the initial centers (triangles)
my_dummy = my_dummy[,1:2]
my_dummy$cluster = c(1,1,1,1,1,1,1,1,1,1)
km_dummy = as.data.frame(rbind(cent, my_dummy))
km_dummy %>% ggplot(aes(x,y)) +
geom_point(alpha = 1, size = 2, shape = c(2,2,2,2,1,1,1,1,1,1,1,1,1,1), colour = c(2,3,4,1,1,1,1,1,1,1,1,1,1), stroke = c(2,2,2,2,1,1,1,1,1,1,1,1,1,1)) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
km_dummy %>% ggplot(aes(x,y)) +
geom_point(alpha = 1, size = 2, shape = c(2,2,2,1,1,1,1,1,1,1,1,1,1), colour = c(2,3,4,1,1,1,1,1,1,1,1,1,1), stroke = c(2,2,2,1,1,1,1,1,1,1,1,1,1)) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
dist(km_dummy)
## K Means clustering
#Lets cluster the dummy into 3 clusters, and choose the initiation for the centers
cent = as.data.frame(cbind(c(2.5,8.75, 2.5), c(0.1, 0.1, 0.4)))
names(cent) = c("x", "y")
cent$cluster = c(1, 2, 3)
cent %>% ggplot(aes(x,y)) +
geom_point(alpha = 1, size = 2, colour = c(2,3,4), shape = 2, stroke = 2) +
scale_color_manual(values = c('red', 'green', 'blue')) + labs(x='X', y="Y")
#Plot the data (circles) and the initial centers (triangles)
my_dummy = my_dummy[,1:2]
my_dummy$cluster = c(1,1,1,1,1,1,1,1,1,1)
km_dummy = as.data.frame(rbind(cent, my_dummy))
km_dummy %>% ggplot(aes(x,y)) +
geom_point(alpha = 1, size = 2, shape = c(2,2,2,1,1,1,1,1,1,1,1,1,1), colour = c(2,3,4,1,1,1,1,1,1,1,1,1,1), stroke = c(2,2,2,1,1,1,1,1,1,1,1,1,1)) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
dist(km_dummy)
kmean_1st = kmeans(my_dummy, centers = cent, iter.max = 100)
## K Means clustering
#Lets cluster the dummy into 3 clusters, and choose the initiation for the centers
cent = as.data.frame(cbind(c(2.5,8.75, 1), c(0.1, 0.1, 0.4)))
names(cent) = c("x", "y")
cent$cluster = c(1, 2, 3)
cent %>% ggplot(aes(x,y)) +
geom_point(alpha = 1, size = 2, colour = c(2,3,4), shape = 2, stroke = 2) +
scale_color_manual(values = c('red', 'green', 'blue')) + labs(x='X', y="Y")
#Plot the data (circles) and the initial centers (triangles)
my_dummy = my_dummy[,1:2]
my_dummy$cluster = c(1,1,1,1,1,1,1,1,1,1)
km_dummy = as.data.frame(rbind(cent, my_dummy))
km_dummy %>% ggplot(aes(x,y)) +
geom_point(alpha = 1, size = 2, shape = c(2,2,2,1,1,1,1,1,1,1,1,1,1), colour = c(2,3,4,1,1,1,1,1,1,1,1,1,1), stroke = c(2,2,2,1,1,1,1,1,1,1,1,1,1)) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
## K Means clustering
#Lets cluster the dummy into 3 clusters, and choose the initiation for the centers
cent = as.data.frame(cbind(c(5,8.75, 1), c(0.2, 0.1, 0.4)))
names(cent) = c("x", "y")
cent$cluster = c(1, 2, 3)
cent %>% ggplot(aes(x,y)) +
geom_point(alpha = 1, size = 2, colour = c(2,3,4), shape = 2, stroke = 2) +
scale_color_manual(values = c('red', 'green', 'blue')) + labs(x='X', y="Y")
#Plot the data (circles) and the initial centers (triangles)
my_dummy = my_dummy[,1:2]
my_dummy$cluster = c(1,1,1,1,1,1,1,1,1,1)
km_dummy = as.data.frame(rbind(cent, my_dummy))
km_dummy %>% ggplot(aes(x,y)) +
geom_point(alpha = 1, size = 2, shape = c(2,2,2,1,1,1,1,1,1,1,1,1,1), colour = c(2,3,4,1,1,1,1,1,1,1,1,1,1), stroke = c(2,2,2,1,1,1,1,1,1,1,1,1,1)) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
dist(km_dummy)
kmean_1st = kmeans(my_dummy, centers = cent, iter.max = 100)
kmean_1st = kmeans(my_dummy, centers = cent, iter.max = 1)
dist(km_dummy)
#Place the each observation to their respective nearest cluster
km_cl1 = c(1,2,3,1,1,2,1,1,2,2,3,1,1)
km_dummy$cluster1 = km_cl1
km_dummy %>% ggplot(aes(x,y)) +
geom_point(alpha = 1, size = 2, shape = c(2,2,2,1,1,1,1,1,1,1,1,1,1), colour = km_dummy$cluster1+1, stroke = c(2,2,2,1,1,1,1,1,1,1,1,1,1)) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
km_dummy[-1:3,] %>% ggplot(aes(x,y)) +
geom_point(alpha = 1, size = 2, shape = c(2,2,2,1,1,1,1,1,1,1,1,1,1), colour = km_dummy$cluster1+1, stroke = c(2,2,2,1,1,1,1,1,1,1,1,1,1)) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
km_dummy[-c(1:3),] %>% ggplot(aes(x,y)) +
geom_point(alpha = 1, size = 2, shape = c(2,2,2,1,1,1,1,1,1,1,1,1,1), colour = km_dummy$cluster1+1, stroke = c(2,2,2,1,1,1,1,1,1,1,1,1,1)) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
km_dummy[4:13,] %>% ggplot(aes(x,y)) +
geom_point(alpha = 1, size = 2, shape = c(2,2,2,1,1,1,1,1,1,1,1,1,1), colour = km_dummy$cluster1+1, stroke = c(2,2,2,1,1,1,1,1,1,1,1,1,1)) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
km_dummy[4:13,] %>% ggplot(aes(x,y)) +
geom_point(alpha = 1, size = 2, shape = c(1,1,1,1,1,1,1,1,1,1), colour = km_dummy[4:13,]$cluster1+1, stroke = c(1,1,1,1,1,1,1,1,1,1)) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
km_dummy[4:13,] %>% ggplot(aes(x,y)) +
geom_point(alpha = 1, size = 3, shape = c(1,1,1,1,1,1,1,1,1,1), colour = km_dummy[4:13,]$cluster1+1, stroke = c(1,1,1,1,1,1,1,1,1,1)) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
km_dummy[4:13,] %>% ggplot(aes(x,y)) +
geom_point(alpha = 2, size = 3, shape = c(1,1,1,1,1,1,1,1,1,1), colour = km_dummy[4:13,]$cluster1+1, stroke = c(1,1,1,1,1,1,1,1,1,1)) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
km_dummy[4:13,] %>% ggplot(aes(x,y)) +
geom_point(alpha = 1, size = 1, shape = c(1,1,1,1,1,1,1,1,1,1), colour = km_dummy[4:13,]$cluster1+1, stroke = c(1,1,1,1,1,1,1,1,1,1)) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
km_dummy[4:13,] %>% ggplot(aes(x,y)) +
geom_point(alpha = 1, size = 2, shape = c(1,1,1,1,1,1,1,1,1,1), colour = km_dummy[4:13,]$cluster1+1, stroke = c(1,1,1,1,1,1,1,1,1,1)) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
#Compute the new centers for each cluster
km_dummy[4:13,] %>% group_by(cluster1)
#Compute the new centers for each cluster
km_dummy[4:13,] %>% group_by(cluster1) %>%
summarise("1" = mean(as.numeric(1)))
#Compute the new centers for each cluster
km_dummy[4:13,] %>% group_by(cluster1) %>%
summarise(x = mean(as.numeric(x)))
#Compute the new centers for each cluster
km_dummy[4:13,] %>% group_by(cluster1) %>%
summarise(x = mean(as.numeric(x)),
y = mean(y))
km_dummy[1:3,1] = c(4.41,8.1,0.278)
km_dummy[1:3,2] = c(0.267, 0.150, .381)
km_dummy %>% ggplot(aes(x,y)) +
geom_point(alpha = 1, size = 2, shape = c(2,2,2,1,1,1,1,1,1,1,1,1,1), colour = km_dummy$cluster1+1, stroke = c(2,2,2,1,1,1,1,1,1,1,1,1,1)) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
km_dummy %>% ggplot(aes(x,y)) +
geom_point(alpha = 1, size = 2, shape = c(2,2,2,1,1,1,1,1,1,1,1,1,1), colour = km_dummy$cluster1+1) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
km_dummy %>% ggplot(aes(x,y)) +
geom_point(alpha = 1, size = 2, shape = c(2,2,2,1,1,1,1,1,1,1,1,1,1), colour = km_dummy$cluster1+1, stroke = c(1,1,1,1,1,1,1,1,1,1,1,1,1)) +
scale_color_manual(values = c('black', 'red', 'green', 'blue')) + labs(x='X', y="Y")
kmean_1st = kmeans(my_dummy, centers = cent, iter.max = 1)
kmean_1st$cluster
kmean_1st = kmeans(my_dummy, centers = cent, iter.max = 100)
kmean_1st$cluster
library(cluster)
### Clustering ###
library(factoextra)
#Optimal number of clusters based on several methods
fviz_nbclust(my_dummy, kmeans, method = "wss")
View(my_dummy)
#Optimal number of clusters based on several methods
fviz_nbclust(my_dummy[,1:2], kmeans, method = "wss")
View(my_dummy)
#Optimal number of clusters based on several methods
my_dummy = my_dummy[,1:2]
fviz_nbclust(my_dummy, kmeans, method = "wss")
fviz_nbclust(my_dummy, kmeans)
### Clustering ###
library(factoextra)
fviz_nbclust(my_dummy, kmeans)
library(ggplot2)
library(dplyr)
fviz_nbclust(my_dummy, kmeans, method = "wss", k.max = 5)
# PCA
pca_train1 = prcomp(client_train1[,-13], scale = TRUE)
View(pca_train1)
head(pca_train1$rotation, 4)
head(pca_train1$x, 4)
# Hierarchical
hier_client = hclust(pca_train1$x[,1:2], method = "complete")
pc_client$x
comp_client = pca_train1$x
comp_client = as.data.frame(pca_train1$x)
# Hierarchical
hier_client = hclust(comp_client[,1:2], method = "complete")
comp_client[,1:2]
# Take 1000 from training for example and learn the cluster pattern
set.seed(12345)
examples <- comp_client$PC1 %>%
createDataPartition(p = 0.2, list = FALSE)
library(caret)
examples <- comp_client$PC1 %>%
createDataPartition(p = 0.2, list = FALSE)
exm_comp  = PimaIndiansDiabetes2[examples, ]
exm_comp  = comp_client[examples, ]
comp_client = as.data.frame(pca_train1$x[,1:2])
# Take 1000 from training for example and learn the cluster pattern
set.seed(12345)
examples = comp_client$PC1 %>%
createDataPartition(p = 0.2, list = FALSE)
exm_comp  = comp_client[examples,]
View(exm_comp)
View(exm_comp)
View(comp_client)
# Use Hierarchical to see how the good is 2 cluster in the data
hier_client = hclust(exm_comp, method = "complete")
# Take 1000 from training for example and learn the cluster pattern
set.seed(12345)
examples = comp_client$PC1 %>%
createDataPartition(p = 0.05, list = FALSE)
exm_comp  = comp_client[examples,]
# Use Hierarchical to see how the good is 2 cluster in the data
hier_client = hclust(exm_comp, method = "complete")
# Take 1000 from training for example and learn the cluster pattern
set.seed(12345)
examples = comp_client$PC1 %>%
createDataPartition(p = 0.025, list = FALSE)
exm_comp  = comp_client[examples,]
# Use Hierarchical to see how the good is 2 cluster in the data
hier_client = hclust(exm_comp, method = "complete")
# Take 1000 from training for example and learn the cluster pattern
set.seed(12345)
examples = comp_client$PC1 %>%
createDataPartition(p = 0.00625, list = FALSE)
exm_comp  = comp_client[examples,]
# Use Hierarchical to see how the good is 2 cluster in the data
hier_client = hclust(exm_comp, method = "complete")
# Use Hierarchical to see how the good is 2 cluster in the data
hier_client = hclust(exm_comp[1:10,], method = "complete")
exm_comp %>% mutate_if(is.numeric, ~round(., 3))
exm_comp = exm_comp %>% mutate_if(is.numeric, ~round(., 3))
# Use Hierarchical to see how the good is 2 cluster in the data
hier_client = hclust(exm_comp[1:10,], method = "complete")
exm_comp = na.omit(exm_comp)
# Use Hierarchical to see how the good is 2 cluster in the data
hier_client = hclust(exm_comp, method = "complete")
View(client_train1)
# Use Hierarchical to see how the good is 2 cluster in the data
hier_client = hclust(client_train1[1:1000,1:2], method = "complete")
# PCA
pca_train1 = prcomp(client_train1[,-13], scale = TRUE) #use first 2 components
comp_client = as.data.frame(pca_train1$x[,1:2])
# Take 1000 from training for example and learn the cluster pattern
set.seed(12345)
examples = comp_client$PC1 %>%
createDataPartition(p = 0.00625, list = FALSE)
# Take 1000 from training for example and learn the cluster pattern
set.seed(12345)
examples = comp_client$PC1 %>%
createDataPartition(p = 0.05, list = FALSE)
exm_comp  = comp_client[examples,]
# Use Hierarchical to see how the good is 2 cluster in the data
hier_client = hclust(dist(exm_comp), method = "complete")
plot(hier_client)
# Result from the example doesnt show a good indication that the data can be clustered into 2 clusters
# Lets apply this k means and try to look for optimal k
# Using k means
km_client = kmeans(comp_client, iter.max = 1000L, nstart = 100L)
# Result from the example doesnt show a good indication that the data can be clustered into 2 clusters
# Lets apply this k means and try to look for optimal k
# Using k means
km_client = kmeans(comp_client, iter.max = 1000L)
# Result from the example doesnt show a good indication that the data can be clustered into 2 clusters
# Lets apply this k means and try to look for optimal k
# Using k means
km_client = kmeans(comp_client, iter.max = 1000L, 2)
# Result from the example doesnt show a good indication that the data can be clustered into 2 clusters
# Lets apply this k means and try to look for optimal k
# Using k means
fviz_nbclust(comp_client, kmeans, method = "wss", k.max = 10)
# Result from the example doesnt show a good indication that the data can be clustered into 2 clusters
# Lets apply this k means and try to look for optimal k
# Using k means
fviz_nbclust(comp_client, kmeans, method = "wss", k.max = 6)
# Result from the example doesnt show a good indication that the data can be clustered into 2 clusters
# Lets apply this k means and try to look for optimal k
# Using k means
fviz_nbclust(comp_client, exm_comp, method = "wss", k.max = 6)
# Result from the example doesnt show a good indication that the data can be clustered into 2 clusters
# Lets apply this k means and try to look for optimal k
# Using k means
fviz_nbclust(exm_comp, kmeans, method = "wss", k.max = 6)
# Lets try different quality comparison method
fviz_nbclust(exm_comp, kmeans, method = "silhouette", k.max = 6)
gap_stat = clusGap(exm_comp, FUN = kmeans, nstart = 25,
K.max = 6, B = 50)
library(cluster)
gap_stat = clusGap(exm_comp, FUN = kmeans, nstart = 25,
K.max = 6, B = 50)
fviz_gap_stat(gap_stat)
# We conclude that from the example 2 clusters is the optimal number of cluster
km_client = kmeans(comp_client, iter.max = 1000L, centers = 2, nstart = 100)
fviz_cluster(km_client)
fviz_cluster(km_client, comp_client)
fviz_cluster(km_client, comp_client, stand = F)
fviz_cluster(km_client, comp_client, stand = F, geom = "point")
km_client$cluster
View(client_train1)
# Extract the result and compare to actual label
result_kmcluster = as.data.frame(cbind(client_train$default.payment.next.month, km_client$cluster))
View(result_kmcluster)
# Extract the result and compare to actual label
result_kmcluster = as.data.frame(cbind(client_train$default.payment.next.month, km_client$cluster-1))
## Comparison
# We'll use specificity and sensitivity to measure our accuracy of clustering prediction
table(result_kmcluster)
# Extract the result and compare to actual label
result_kmcluster = as.data.frame(cbind(client_train$default.payment.next.month, km_client$cluster%%2))
names(result_kmcluster) = c("actual label", "cluster")
## Comparison
# We'll use specificity and sensitivity to measure our accuracy of clustering prediction
table(result_kmcluster)
result_kmcluster2 = as.data.frame(cbind(client_train$default.payment.next.month, km_client$cluster-1))
names(result_kmcluster2) = c("actual label", "cluster")
table(result_kmcluster2)
specificity(result_kmcluster)
specificity(table(result_kmcluster))
sensitivity(table(result_kmcluster))
specificity(table(result_kmcluster2))
sensitivity(table(result_kmcluster2))
result_kmcluster2
table(result_kmcluster2)
View(result_kmcluster2)
