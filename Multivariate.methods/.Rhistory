t.test(height.l, mu = 180, sigma = 90)
t.test(height.l, mu = 180)
t.test(height.l, mu = 180)
t.test(height.l, mu = 180, sigma = 90)
t.test(height.l, mu = 180)
install.packages("BSDA")
library(BSDA)
z.test(height.l, mu = 180, sigma.x = 90)
z.test(height.l, mu = 180)
z.test(height.l, mu = 180, sigma.x = 100)
z.test(height.l, mu = 180, sigma.x = 1)
z.test(height.l, mu = 180, sigma.x = 90)
height.p = c(height$v2, height$v4)
z.test(height.p, mu = 150, sigma.x = 50)
height2 = cbind(height.l, height.p)
mu.ke = apply(height2, 2, mean)
cov.ke = matrix(c(90, 52, 50, 52), nrow = 2)
View(cov.ke)
cov.ke = matrix(c(90, 52, 50, 52), nrow = 2, byrow = T)
z2.ke = 50*t(mu.ke-c(180,150))%*%solve(cov.ke)%*%(mu.ke-c(180,150))
z2.k
z2.ke
p.z2ke = dchisq(z2.ke, 2)
p.z2ke
library(DescTools)
HotellingsT2Test(height2, mu = mu.ke)
HotellingsT2Test(height2, mu =c(180,150))
HotellingsT2Test(height2, mu =c(180,150), sigma = cov.ke)
cov(height2)
#2
y2bar = apply(height[,1:2],2,mean)
y3bar = apply(height[,3:4],2,mean)
n2 = dim(height[,1:2])[1]
n3 = dim(height[,1:2])[1]
w2 = (n2-1)*cov(height[,1:2])
w3 = (n3-1)*cov(height[,3:4])
spl = (1/(n2+n3-2))*(w2+w3)
View(spl)
View(w2)
t2 = (n2*n3/(n2+n3))*t(y2bar-y3bar)%*%solve(spl)%*%(y2bar-y3bar)
p = dim(height)[2]
p = dim(height[,1:2])[2]
f = (n2+n3-p-1)/((n2+n3-2)*p)*t2
f
t2 = HotellingsT2Test(height[,1:2], height[,3:4])
t2 = HotellingsT2Test(height[,1:2], height[,3:4])
t2$statistic[1,1]
t2
##assumption
# H0: normality
library(MVN)
###manova###
##test statistics
#test with manova, when the null hypothesis is accepted, proceed with anova
man.iris = manova(cbind(Sepal.Width, Sepal.Length, Petal.Length) ~ Species)
library(RVAideMemoire)
install.packages("biotools")
library(biotools)
data("iris")
attach(iris)
###manova###
##test statistics
#test with manova, when the null hypothesis is accepted, proceed with anova
man.iris = manova(cbind(Sepal.Width, Sepal.Length, Petal.Length) ~ Species)
summary(man.iris)
lm1.iris = lm(Sepal.Width ~ Species)
anova1 = anova(lm1.iris)
anova1
lm2.iris = lm(Sepal.Length ~ Species)
anova2 = anova(lm2.iris)
anova2
lm3.iris = lm(Petal.Length ~ Species)
anova3 = anova(lm3.iris)
anova3
##assumption
# H0: normality
library(MVN)
mshapiro.test(man.iris$residuals)
mvn(man.iris)
mvn(man.iris$residuals)
# H0 : homogeneity of variance
la <- data.frame(man.iris$residuals)
boxM(man.iris$residuals, iris[,5])
boxM(man.iris$residuals, Species)
Species
#for independence, need information about the sampling method
summary(man.iris) # default Pillai
summary(man.iris, test = 'Wilks')
summary(man.iris, test = 'Hotelling-Lawley')
summary(man.iris, test = 'Roy')
View(iris)
summary(man.iris)
anova1
anova2
#for independence, need information about the sampling method
summary(man.iris) # default Pillai
summary(man)
#4b
man = manova(cbind(data_uas_multiv1[,1],data_uas_multiv1[,2],data_uas_multiv1[,3],
data_uas_multiv1[,4],data_uas_multiv1[,5],data_uas_multiv1[,6])
~data_uas_multiv1[,8])
###KJ UAS
library(readxl)
library(DescTools)
driver_profile = read_excel("G:/My Drive/Github/Multivariate-Statistics-R/driver.profile.xlsx")
#4b
man = manova(cbind(data_uas_multiv1[,1],data_uas_multiv1[,2],data_uas_multiv1[,3],
data_uas_multiv1[,4],data_uas_multiv1[,5],data_uas_multiv1[,6])
~data_uas_multiv1[,8])
View(driver_profile)
#4b
attach(driver_profile)
man = manova(cbind(v1,v2,v3,v4,v5,v6)
~group)
summary(man)
summary(man, test = 'Wilks')
#4a
attach(driver_profile)
lm1 = lm(v1~group)
lm2 = lm(v2~group)
lm3 = lm(v3~group)
lm4 = lm(v4~group)
lm5 = lm(v5~group)
lm6 = lm(v6~group)
anova(lm1)
anova(lm2)
anova(lm3)
anova(lm4)
anova(lm5)
anova(lm6)
pf(0.05, 2, 57)
qf(0.95, 2, 58)
qf(0.95, 2, 57)
anova(lm6)
qf(0.95, 2, 38)
qf(0.95, 1, 58)
driver_profile[,8] = as.factor(driver_profile[,8])
View(driver_profile)
driver_profile = read_excel("G:/My Drive/Github/Multivariate-Statistics-R/driver.profile.xlsx")
group = as.factor(driver_profile[,8])
group = as.factor(driver_profile$group)
driver_profile[,8] = group
#4a
attach(driver_profile)
lm1 = lm(v1~group)
lm2 = lm(v2~group)
lm3 = lm(v3~group)
lm4 = lm(v4~group)
lm5 = lm(v5~group)
lm6 = lm(v6~group)
anova(lm1)
anova(lm2)
anova(lm3)
anova(lm4)
anova(lm5)
anova(lm6)
qf(0.95, 2, 57)
man = manova(cbind(v1,v2,v3,v4,v5,v6)
~group)
summary(man)
summary(man, test = 'Wilks')
library(mvnormtest)
library(MVN)
mshapiro.test(man$residuals)
mvn(man$residuals)
library(biotools)
boxM(man$residuals, driver_profile$group)
boxM(lm1$residuals, driver_profile$group)
lm1$residuals
bartlett.test(lm1$residuals~driver_profile$group)
bartlett.test(lm2$residuals~driver_profile$group)
bartlett.test(lm3$residuals~driver_profile$group)
bartlett.test(lm4$residuals~driver_profile$group)
bartlett.test(lm5$residuals~driver_profile$group)
bartlett.test(lm6$residuals~driver_profile$group)
#until the end of univariate test, it is found that soil isn't affecting the response variables
#next we'll apply the complete procedures when we are facing an already clean data
survtime = read.table("Multivariate-Statistics-R/T6_22_SURVTIME.DAT", quote="\"", comment.char="")
T6_22_SURVTIME <- read.table("G:/My Drive/Github/Multivariate-Statistics-R/Multivariate.methods/T6_22_SURVTIME.DAT", quote="\"", comment.char="")
View(T6_22_SURVTIME)
#until the end of univariate test, it is found that soil isn't affecting the response variables
#next we'll apply the complete procedures when we are facing an already clean data
survtime = read.table("Multivariate-Statistics-R/T6_22_SURVTIME.DAT")
#until the end of univariate test, it is found that soil isn't affecting the response variables
#next we'll apply the complete procedures when we are facing an already clean data
survtime = read.table("T6_22_SURVTIME.DAT")
#from Rencher() the data is survival time from cancer patients (Cameron and Pauling, 1978)
View(survtime)
colnames(survtime) = c("type", "gender", "age", "y1", "y2", "y3", "y4")
#from Rencher() the data is survival time from cancer patients (Cameron and Pauling, 1978)
View(survtime)
boxplot(survtime[,4:7])
###Characterizing and displaying multivariate data###
library(car)
library(RColorBrewer)
library(stats)
library(shiny)
library(gridExtra)
library(tidyverse)
library(ggplot2)
##data iris from r datasets
data("iris")
iris = as.matrix(iris[, 1:4])
iris
##Covariance and correlation on multivariate variable
#for starter, it can be helpful to look on the scatterplot of the data
scatterplotMatrix(iris)
#from the scatterplot, subjectively, there are pairs of variables which shown a trend of covary
#covary on multivariate data can be described as : tendency to create pattern relative to each variables mean
#for instance : petal length and petal width which create a similar data point spread around each of their means
qplot(iris[,3], iris[,4])
#to help on looking on this pattern, profile plot can be used
#profile plot
Profile_Plot = function(list,name){
require(RColorBrewer)
# finding how many variables to include
numvar = length(list)
# choose 'numvar' random colours
colours = brewer.pal(numvar,"Set1")
# finding the minimum and maximum values of the variables:
mymin = 1e+20
mymax = 1e-20
for (i in 1:numvar)
{
vectori <- list[[i]]
mini = min(vectori)
maxi = max(vectori)
if (mini < mymin) { mymin = mini }
if (maxi > mymax) { mymax = maxi }
}
# plot the variables
for (i in 1:numvar)
{
vectori <- list[[i]]
namei <- name[i]
colouri <- colours[i]
if (i == 1) { plot(vectori,col=colouri,type="l",ylim=c(mymin,mymax)) }
else         { points(vectori, col=colouri,type="l")                                     }
lastxval <- length(vectori)
lastyval <- vectori[length(vectori)]
text((lastxval-10),(lastyval),namei,col="black",cex=0.6)
}
}
#the above function use list as the input
iris_list = list(iris[,1],iris[,2],iris[,3],iris[,4])
Profile_Plot(iris_list, names(iris[1,]))
#variables that will be used are y1-y4 and the factors are "type" of cancer and gender
library(dplyr)
iris %>% group_by(Species)%>%
summarize(mean_sepal_l = mean(Sepal.Length),
mean_sepal_w = mean(Sepal.Width),
mean_petal_l = mean(Petal.Length),
mean_petal_w = mean(Petal.Width))
View(iris)
iris
data("iris")
iris %>% group_by(Species)%>%
summarize(mean_sepal_l = mean(Sepal.Length),
mean_sepal_w = mean(Sepal.Width),
mean_petal_l = mean(Petal.Length),
mean_petal_w = mean(Petal.Width))
survtime %>% group_by(type)%>%
summarize(mean_y1 = mean(y1),
mean_y2 = mean(y2),
mean_y3 = mean(y3),
mean_y4 = mean(y4))
#from the table above, we can see some differences between each group on 4 variables
#the following lines will fit the data with factor "type" into 1 way MANOVa
manova(cbind(y1,y2,y3,y4)~type, data = survtime)
#from the table above, we can see some differences between each group on 4 variables
#the following lines will fit the data with factor "type" into 1 way MANOVa
man_surv = manova(cbind(y1,y2,y3,y4)~type, data = survtime)
summary(man_surv)
summary(man_surv, test = 'wilks')
summary(man_surv, test = 'Wilks')
summary(man_surv, test = 'Hotelling-Lawley')
summary(man_surv, test = 'Roy')
#variables that will be used are y1-y4 and the factors are "type" of cancer and gender
survtime[,1] = as.factor(survtime[,1])
survtime[,2] = as.factor(survtime[,2])
boxplot(survtime[,4:7])
survtime %>% group_by(type)%>%
summarize(mean_y1 = mean(y1),
mean_y2 = mean(y2),
mean_y3 = mean(y3),
mean_y4 = mean(y4))
#from the table above, we can see some differences between each group on 4 variables
#the following lines will fit the data with factor "type" into 1 way MANOVa
man_surv = manova(cbind(y1,y2,y3,y4)~type, data = survtime)
summary(man_surv)
summary(man_surv, test = 'Wilks')
summary(man_surv, test = 'Hotelling-Lawley')
summary(man_surv, test = 'Roy')
#from the table above, we can see some differences between each group on 4 variables
#the following lines will fit the data with factor "type" into 2 way MANOVA
man_surv = manova(cbind(y1,y2,y3,y4) ~ cbind(type,gender), data = survtime)
summary(man_surv)
#from the table above, we can see some differences between each group on 4 variables
#the following lines will fit the data with factor "type" into 2 way MANOVA
man_surv = manova(cbind(y1,y2,y3,y4) ~ type*gender, data = survtime)
summary(man_surv)
summary(man_surv, test = 'Wilks')
summary(man_surv, test = 'Hotelling-Lawley')
summary(man_surv, test = 'Roy')
#from the table above, we can see some differences between each group on 4 variables
#the following lines will fit the data with factor "type" into 2 way MANOVA
man_surv = manova(cbind(y1,y2,y3,y4) ~ type*gender, data = survtime)
summary(man_surv)
summary(man_surv, test = 'Wilks')
summary(man_surv, test = 'Hotelling-Lawley')
summary(man_surv, test = 'Roy')
#as it can be seen, the difference from at least 2 type of cancer is significant
#meanwhile for the other terms, it doesnt seems to be significant
man_surv2 = manova(cbind(y1,y2,y3,y4) ~ type+gender, data = survtime)
summary(man_surv2)
#as such, we proceed with the acceptance that only type of cancer as the sole significant
#factor
man_surv3 = manova(cbind(y1,y2,y3,y4) ~ type, data = survtime)
summary(man_surv3)
summary(man_surv3, test = 'Wilks')
summary(man_surv3, test = 'Hotelling-Lawley')
summary(man_surv3, test = 'Roy')
# H0: normality
mshapiro.test(man_surv3$residuals)
#then analyzing the assumptions
library(biotools)
library(MVN)
# H0: normality
mshapiro.test(man_surv3$residuals)
library(mvnormtest)
# H0: normality
mshapiro.test(man_surv3$residuals)
mvn(man.iris$residuals)
#normality is accepted
# H0 : homogeneity of variance
surv_la = data.frame(man_surv3$residuals)
View(surv_la)
boxM(man_surv3$residuals, type)
boxM(man_surv3$residuals, survtime$type)
boxM(surv_la, survtime$type)
#for the (2) lets try observe each group closer
survtime %>% group_by(type)
install.packages("MANOVA.RM")
##MANOVA RM
library(MANOVA.RM)
MANOVA(cbind(y1,y2,y3,y4) ~ type, data = survtime)
MANOVA.wide(cbind(y1,y2,y3,y4) ~ type, data = survtime)
man_surv4 = MANOVA.wide(cbind(y1,y2,y3,y4) ~ type*gender, data = survtime)
man_surv4 = MANOVA.wide(cbind(y1,y2,y3,y4) ~ type, data = survtime)
summary(man_surv4)
#y1
lmsurv_y1 = lm(y1 ~ type*gender, data = survtime)
anova(lmsurv_y1)
lmsurv_y1 = lm(y1 ~ type+gender, data = survtime)
anova(lmsurv_y1)
#next, we proceed with ANOVA to check the difference for both type and gender groups
#in each variable
#since we were dealing it in a repeated measure-modified model, we'll also proceed in a
#similar manner for ANOVA
library(rstatix)
#y1
survtime %>%
group_by(type) %>%
identify_outliers(y1)
#y1
survtime %>%
group_by(type) %>%
identify_outliers(y1)
#delete the extreme outliers
survtime2 = survtime[-c(32,51)]
survtime2 %>%
group_by(type) %>%
identify_outliers(y1)
#delete the extreme outliers
survtime2 = survtime[-c(32,51),]
survtime2 %>%
group_by(type) %>%
identify_outliers(y1)
library(ggpubr)
#we'll start from analyzing data in univariate then computing the test statistics and
#lastly checking for assumption violation
ggboxplot(survtime, x = "type", y = "y1", add = "point")
lmsurv_y1 = anova_test(y1 ~ type*gender, data = survtime)
get_anova_table(lmsurv_y1)
survtime %>%
group_by(type, gender) %>%
identify_outliers(y1)
#delete the extreme outliers
survtime2 = survtime[-c(32),]
survtime2 %>%
group_by(type) %>%
identify_outliers(y1)
#delete the extreme outliers
survtime2 = survtime[-c(32, 51),]
survtime2 %>%
group_by(type) %>%
identify_outliers(y1)
#delete the extreme outliers
survtime2 = survtime[-c(32),]
survtime2 %>%
group_by(type, gender) %>%
identify_outliers(y1)
lmsurv_y1 = anova_test(y1 ~ type*gender, data = survtime2)
get_anova_table(lmsurv_y1)
lmsurv_y1 = anova_test(y1 ~ type+gender, data = survtime)
get_anova_table(lmsurv_y1)
lmsurv_y1 = anova_test(y1 ~ type, data = survtime2)
get_anova_table(lmsurv_y1)
survtime2 %>%
group_by(type) %>%
shapiro_test(y1)
get_anova_table(lmsurv_y1) #final result finds that only the type of cancer has different value of y1
lmsurv_y1 = anova(y1 ~ type, data = survtime2)
lmsurv_y1 = aov(y1 ~ type, data = survtime2)
get_anova_table(lmsurv_y1) #final result finds that only the type of cancer has different value of y1
lmsurv_y1 = anova_test(y1 ~ type, data = survtime2)
get_anova_table(lmsurv_y1) #final result finds that only the type of cancer has different value of y1
get_anova_table(lmsurv_y1) #final result finds that only the type of cancer has different value of y1
aov(y1 ~ type, data = survtime2)
summary(aov(y1 ~ type, data = survtime2))
anova(lm(y1 ~ type, data = survtime2))
shapiro_test(lm(y1 ~ type, data = survtime2)$residuals)
#delete the extreme outlier(s)
survtime2 = survtime[-c(32, 51),]
survtime2 %>%
group_by(type, gender) %>%
identify_outliers(y1)
lmsurv_y1 = anova_test(y1 ~ type*gender, data = survtime2)
get_anova_table(lmsurv_y1) #interaction is not significant, ignore the term
lmsurv_y1 = anova_test(y1 ~ type+gender, data = survtime2)
get_anova_table(lmsurv_y1) #gender is not significant
lmsurv_y1 = anova_test(y1 ~ type, data = survtime2)
get_anova_table(lmsurv_y1) #final result finds that only the type of cancer has different value of y1
shapiro_test(lm(y1 ~ type, data = survtime2)$residuals)
ggboxplot(survtime, x = "gender", y = "y1", add = "point")
#y2
ggboxplot(survtime, x = "type", y = "y2", add = "point")
ggboxplot(survtime, x = "gender", y = "y2", add = "point")
survtime %>%
group_by(type, gender) %>%
identify_outliers(y2)
survtime %>%
group_by(type) %>%
identify_outliers(y2)
#delete the extreme outlier(s)
survtime2 = survtime[-c(27),]
lmsurv_y2 = anova_test(y2 ~ type*gender, data = survtime2)
get_anova_table(lmsurv_y2) #interaction is not significant, ignore the term
lmsurv_y2 = anova_test(y2 ~ type+gender, data = survtime2)
get_anova_table(lmsurv_y2) #gender is not significant
lmsurv_y2 = anova_test(y2 ~ type, data = survtime2)
get_anova_table(lmsurv_y2) #final result finds that only the type of cancer has different value of y1
shapiro_test(lm(y2 ~ type, data = survtime2)$residuals)
#y3
ggboxplot(survtime, x = "type", y = "y3", add = "point")
ggboxplot(survtime, x = "gender", y = "y3", add = "point")
survtime %>%
group_by(type, gender) %>%
identify_outliers(y3)
#delete the extreme outlier(s)
survtime2 = survtime[-c(32),]
lmsurv_y2 = anova_test(y2 ~ type*gender, data = survtime2)
get_anova_table(lmsurv_y2) #interaction is not significant, ignore the term
lmsurv_y2 = anova_test(y2 ~ type+gender, data = survtime2)
get_anova_table(lmsurv_y2) #gender is not significant
lmsurv_y2 = anova_test(y2 ~ type, data = survtime2)
get_anova_table(lmsurv_y2) #final result finds that only the type of cancer has different value of y1
lmsurv_y3 = anova_test(y3 ~ type*gender, data = survtime2)
get_anova_table(lmsurv_y3) #interaction is not significant, ignore the term
lmsurv_y3 = anova_test(y3 ~ type+gender, data = survtime2)
get_anova_table(lmsurv_y3) #gender is not significant
lmsurv_y3 = anova_test(y3 ~ type, data = survtime2)
get_anova_table(lmsurv_y3) #final result finds that only the type of cancer has different value of y1
#y4
ggboxplot(survtime, x = "type", y = "y4", add = "point")
ggboxplot(survtime, x = "gender", y = "y4", add = "point")
survtime %>%
group_by(type, gender) %>%
identify_outliers(y4)
lmsurv_y4 = anova_test(y4 ~ type*gender, data = survtime2)
get_anova_table(lmsurv_y4) #interaction is not significant, ignore the term
lmsurv_y4 = anova_test(y4 ~ type+gender, data = survtime2)
get_anova_table(lmsurv_y4) #gender is not significant
lmsurv_y4 = anova_test(y4 ~ type, data = survtime2)
get_anova_table(lmsurv_y4) #final result finds that there is no difference between any type of group in regard of y3 value
#y3
ggboxplot(survtime, x = "type", y = "y3", add = "point")
#y2
ggboxplot(survtime, x = "type", y = "y2", add = "point")
#y1
ggboxplot(survtime, x = "type", y = "y1", add = "point")
#the univariate case finds that difference between type of cancer group happens
#in regard of variable y1 and y2
#a post-hoc analysis can be done for these 2 significant variables
#for simplicity we'll show the computation in post-hoc analysis for only y1
#and obviously post-hoc analysis for y2 can be done in a similar manner
survtime %>%
pairwise_t_test(y1 ~ type, paired = TRUE, p.adjust.method = "bonferroni")
#the univariate case finds that difference between type of cancer group happens
#in regard of variable y1 and y2
#a post-hoc analysis can be done for these 2 significant variables
#for simplicity we'll show the computation in post-hoc analysis for only y1
#and obviously post-hoc analysis for y2 can be done in a similar manner
survtime %>%
pairwise_t_test(y1 ~ type, p.adjust.method = "bonferroni")
#the univariate case finds that difference between type of cancer group happens
#in regard of variable y1 and y2
#a post-hoc analysis can be done for these 2 significant variables
#for simplicity we'll show the computation in post-hoc analysis for only y1
#and obviously post-hoc analysis for y2 can be done in a similar manner
survtime %>%
pairwise_t_test(y1 ~ type, p.adjust.method = "bonferroni")
